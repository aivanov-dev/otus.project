version: '3.7'

services:
  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: ${COMPOSE_PROJECT_NAME}_prometheus
    user: root
    volumes:
      - ./prometheus:/etc/prometheus
      - ./../../shared/.data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - '${INTERFACE:-127.0.0.1}:${PROMETHEUS_PORT:-9090}:9090'
    networks:
      - app-network
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:8.0.4
    container_name: ${COMPOSE_PROJECT_NAME}_grafana
    user: root
    volumes:
      - ./../../shared/.data/grafana:/var/lib/grafana
      - ./../.docker/images/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./../.docker/images/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - '${GRAFANA_PORT:-3000}:3000'
    networks:
      - app-network
    labels:
      org.label-schema.group: "monitoring"
  nodeexporter:
    image: prom/node-exporter:v1.1.2
    container_name: ${COMPOSE_PROJECT_NAME}_nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - app-network
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.2
    container_name: ${COMPOSE_PROJECT_NAME}_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    networks:
      - app-network
    expose:
      - 8080
    labels:
      org.label-schema.group: "monitoring"
volumes:
  socket:
    driver: local

networks:
  app-network:
    driver: bridge


