{
    "openapi": "3.0.0",
    "info": {
        "title": "Otus API Documentation",
        "description": "L5 Swagger OpenApi description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/achievements/index": {
            "get": {
                "tags": [
                    "Achievements"
                ],
                "summary": "Get list of achievements with pagination",
                "description": "Get list of achievements with pagination",
                "operationId": "getAchievementList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Number of achievement per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexAchievementResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/achievements": {
            "post": {
                "tags": [
                    "Achievements"
                ],
                "summary": "Store new achievements",
                "description": "Returns achievement data",
                "operationId": "storeAchievement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAchievementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Achievement"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/achievements/{id}": {
            "put": {
                "tags": [
                    "Achievements"
                ],
                "summary": "Update existing achievements",
                "description": "Update only those fields you want, no need to send all fields.",
                "operationId": "updateAchievement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Achievement ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAchievementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Achievement"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad input data"
                    },
                    "400": {
                        "description": "No data to update, empty request body"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Achievements"
                ],
                "summary": "Delete achievements",
                "description": "Delete achievements by it id.",
                "operationId": "deleteAchievement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Achievement ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Bad input data"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/exercises": {
            "get": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Get list of exercises",
                "description": "Returns list of exercises",
                "operationId": "getExercises",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Store new exercise",
                "description": "Returns new created exercise",
                "operationId": "storeExercise",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExerciseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/exercises/{id}": {
            "get": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Get exercise information",
                "description": "Returns exercise data",
                "operationId": "getExerciseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exercise id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Update exercise",
                "description": "Returns updated exercise",
                "operationId": "updateExercise",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExerciseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Exercises"
                ],
                "summary": "Delete existing exercise",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteExercise",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exercise id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/exercise-groups": {
            "get": {
                "tags": [
                    "ExerciseGroups"
                ],
                "summary": "Get list of ExerciseGroups",
                "description": "Returns list of exercise-groups",
                "operationId": "getExerciseGroups",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseGroupsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "ExerciseGroups"
                ],
                "summary": "Store new exerciseGroups",
                "description": "Returns new created exerciseGroups",
                "operationId": "storeExerciseGroups",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExerciseGroupsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseGroupsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/exercise-groups/ancestors/{id}": {
            "get": {
                "tags": [
                    "ExerciseGroups"
                ],
                "summary": "Get ancestors tree information",
                "description": "Returns excersices data",
                "operationId": "getAncestorsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Excersice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/exercise-groups/descendants/{id}": {
            "get": {
                "tags": [
                    "ExerciseGroups"
                ],
                "summary": "Get descendants tree information",
                "description": "Returns excersices data",
                "operationId": "getDescendantsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Excersice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/exercise-groups/{id}": {
            "delete": {
                "tags": [
                    "ExerciseGroups"
                ],
                "summary": "Delete existing ExerciseGroup",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteExerciseGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parent id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get list of projects",
                "description": "Returns list of projects",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Store new project",
                "description": "Returns project data",
                "operationId": "storeProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get project information",
                "description": "Returns project data",
                "operationId": "getProjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete existing project",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/skills": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get list of all skills",
                "description": "Get list of all skills",
                "operationId": "getAllSkills",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillResource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Skills"
                ],
                "summary": "Store new skill",
                "description": "Returns created skill",
                "operationId": "storeSkill",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/skills/{id}": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get skill by id",
                "description": "Get skill by id",
                "operationId": "getSkillById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the skill",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Skill not found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Skills"
                ],
                "summary": "Delete skill",
                "description": "Returns operation status",
                "operationId": "deleteSkill",
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Skill not found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Skills"
                ],
                "summary": "Update skill",
                "description": "Returns updated skill",
                "operationId": "updateSkill",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSkillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/skills/levels/all": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get all skills levels",
                "description": "Returns list of skills levels",
                "operationId": "getAllSkillsLevels",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillLevelResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/skills/levels/search": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Get skills level by value",
                "description": "Returns name of skills level",
                "operationId": "getSkillsLevelByValue",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillLevelResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Returns list of tasks",
                "operationId": "getTasks",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExerciseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store new task",
                "description": "Returns new created task",
                "operationId": "storeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task information",
                "description": "Returns task data",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task",
                "description": "Returns updated task",
                "operationId": "updateTask",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete existing task",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/results/index": {
            "get": {
                "tags": [
                    "Task Results"
                ],
                "summary": "Get list of resultss with pagination",
                "description": "Get list of resultss with pagination",
                "operationId": "getResultsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "1"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexTaskResultsResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/results": {
            "post": {
                "tags": [
                    "Task Results"
                ],
                "summary": "Store new result",
                "description": "Returns result data",
                "operationId": "storeResults",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTaskResultRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad input data"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/result-statistics-tasks": {
            "get": {
                "tags": [
                    "TaskResultStatistics"
                ],
                "summary": "Get list of taskResultStatistics rows",
                "description": "Returns list of list of taskResultStatistics rows",
                "operationId": "getTaskResultStatistics",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResultStatisticsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/result-statistics-tasks/{id}": {
            "get": {
                "tags": [
                    "TaskResultStatistics"
                ],
                "summary": "Get taskResultStatistics information",
                "description": "Returns taskResultStatistics data",
                "operationId": "getTaskResultStatisticsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TaskResultStatistics id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResultStatisticsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "api/result-statistics-tasks/": {
            "put": {
                "tags": [
                    "TaskResultStatistics"
                ],
                "summary": "Update taskResultStatistics",
                "description": "Returns updated taskResultStatistics",
                "operationId": "updateTaskResultStatistics",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskResultStatisticsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResultStatisticsResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns new created user",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Returns updated user",
                "operationId": "updateUser",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreExerciseGroupsRequest": {
                "title": "Store exercise groups request",
                "description": "Store exercise groups request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "English"
                    }
                },
                "type": "object"
            },
            "UpdateExerciseGroupsRequest": {
                "title": "Update exercise groups request",
                "description": "Update exercise groups request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Russian"
                    }
                },
                "type": "object"
            },
            "StoreExerciseRequest": {
                "title": "Store exercise request",
                "description": "Store exercise request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Test"
                    }
                },
                "type": "object"
            },
            "UpdateExerciseRequest": {
                "title": "Update exercise request",
                "description": "Store exercise request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Test some"
                    }
                },
                "type": "object"
            },
            "StoreSkillRequest": {
                "title": "Store skill request",
                "description": "Store skill request body data",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Письмо"
                    },
                    "code": {
                        "title": "code",
                        "example": "writing"
                    }
                },
                "type": "object"
            },
            "UpdateSkillRequest": {
                "title": "Update skill request",
                "description": "Update skill request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "New name of the skill",
                        "example": "Чтение"
                    },
                    "code": {
                        "title": "code",
                        "description": "New code of the skill",
                        "example": "reading"
                    }
                },
                "type": "object"
            },
            "StoreTaskResultStatisticsRequest": {
                "title": "Store taskResultStatistics request",
                "description": "Store taskResultStatistics request body data",
                "properties": {
                    "task_id": {
                        "title": "task_id",
                        "example": "100"
                    },
                    "assessment": {
                        "title": "assessment",
                        "example": "5"
                    }
                },
                "type": "object"
            },
            "UpdateTaskResultStatisticsRequest": {
                "title": "Update taskResultStatistics request",
                "description": "Update taskResultStatistics request body data",
                "properties": {
                    "task_id": {
                        "title": "task_id",
                        "example": "100"
                    },
                    "assessment": {
                        "title": "assessment",
                        "example": "5"
                    }
                },
                "type": "object"
            },
            "StoreTaskRequest": {
                "title": "Store task request",
                "description": "Store task request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "example": "Task. #3l7-5g5"
                    },
                    "description": {
                        "title": "description",
                        "example": "Esse non nam voluptatibus beatae"
                    },
                    "exercise_id": {
                        "title": "exercise_id",
                        "example": "18"
                    }
                },
                "type": "object"
            },
            "UpdateTaskRequest": {
                "title": "Store task request",
                "description": "Store task request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "example": "Task. #3l7-5g5"
                    },
                    "description": {
                        "title": "description",
                        "example": "Esse non nam voluptatibus beatae"
                    },
                    "exercise_id": {
                        "title": "exercise_id",
                        "example": "18"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store user request",
                "description": "Store user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "David"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update user request",
                "description": "Store user request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Sam"
                    }
                },
                "type": "object"
            },
            "ExerciseGroupsResource": {
                "title": "ExerciseGroupsResource",
                "description": "ExerciseGroups resource",
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "John"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ExerciseGroupsResource"
                }
            },
            "ExerciseResource": {
                "title": "ExerciseResource",
                "description": "Exercise resource",
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "Ex. #3y7-2y3"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ExerciseResource"
                }
            },
            "SkillLevelResource": {
                "title": "SkillLevelResource",
                "description": "Skill level resource",
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "A1 - Beginner"
                    },
                    "experience": {
                        "title": "experience",
                        "type": "int",
                        "example": "100"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SkillLevelResource"
                }
            },
            "SkillResource": {
                "title": "SkillResource",
                "description": "Skill resource",
                "properties": {
                    "id": {
                        "title": "id",
                        "example": "3"
                    },
                    "name": {
                        "title": "name",
                        "example": "Чтение"
                    },
                    "code": {
                        "title": "code",
                        "example": "reading"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SkillResource"
                }
            },
            "TaskResource": {
                "title": "TaskResource",
                "description": "Task resource",
                "properties": {
                    "title": {
                        "title": "title",
                        "example": "Task. #3l7-5g5"
                    },
                    "description": {
                        "title": "description",
                        "example": "Esse non nam voluptatibus beatae"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaskResource"
                }
            },
            "TaskResultStatisticsResource": {
                "title": "TaskResultStatisticsResource",
                "description": "TaskResultStatistics resource",
                "properties": {
                    "task_id": {
                        "title": "task_id",
                        "example": "45"
                    },
                    "assessment": {
                        "title": "assessment",
                        "example": "8"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaskResultStatisticsResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "name": {
                        "title": "name",
                        "example": "John"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "Achievement": {
                "title": "Achievement",
                "description": "Achievement model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new achievement",
                        "type": "string",
                        "example": "A nice achievement"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "Slug of the new achievement. Is autogenerated from name if not pass",
                        "type": "string",
                        "example": "a-nice-achievement"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new achievement",
                        "type": "string",
                        "example": "This is new achievement's description"
                    },
                    "expression": {
                        "title": "Expression",
                        "description": "Language expression of the new achievement",
                        "type": "string",
                        "example": "exercise.taskResults.countWithCondition('assessment', 10)"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Achievement"
                }
            },
            "Meta": {
                "title": "Meta",
                "description": "Meta",
                "properties": {
                    "page": {
                        "title": "page",
                        "description": "page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "perPage": {
                        "title": "per-page",
                        "description": "Number of entries per page",
                        "type": "string",
                        "example": "10"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Meta"
                }
            },
            "Project": {
                "title": "Project",
                "description": "Project model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "author_id": {
                        "title": "Author ID",
                        "description": "Author's id of the new project",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "author": {
                        "title": "Author",
                        "description": "Project author's user model"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project"
                }
            },
            "TaskResult": {
                "title": "TaskResult",
                "description": "TaskResult model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "task_id": {
                        "title": "TaskId",
                        "description": "Id of the task result corresponds to",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "user_id": {
                        "title": "UserId",
                        "description": "Id of the user result corresponds to",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "exercise_group_id": {
                        "title": "Course or module id",
                        "description": "Course or module id",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "assessment": {
                        "title": "Assessment mark",
                        "description": "Assessment mark",
                        "type": "number",
                        "format": "float",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaskResult"
                }
            },
            "IndexAchievementResource": {
                "title": "IndexAchievementResource",
                "description": "Achievement resource",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Achievement"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "IndexAchievementResource"
                }
            },
            "IndexTaskResultsResource": {
                "title": "IndexTaskResultsResource",
                "description": "Task result resource",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "ref": null
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "IndexTaskResultsResource."
                }
            },
            "ProjectResource": {
                "title": "ProjectResource",
                "description": "Project resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProjectResource"
                }
            },
            "StoreAchievementRequest": {
                "title": "Store achievement request",
                "description": "Store achievement request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new achievement",
                        "type": "string",
                        "example": "A nice achievement"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Slug of the new project",
                        "type": "string",
                        "example": "this-is-new-achievement's-slug"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new achievement",
                        "type": "string",
                        "example": "This is new achievement's description"
                    },
                    "expression": {
                        "title": "expression",
                        "description": "Expression of the new achievement",
                        "type": "string",
                        "example": "exercise.taskResults.countWithCondition('assessment', 10)"
                    }
                },
                "type": "object"
            },
            "StoreProjectRequest": {
                "title": "Store Project request",
                "description": "Store Project request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "author_id": {
                        "title": "author_id",
                        "description": "Author's id of the new project",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreTaskResultRequest": {
                "title": "Store task result request",
                "description": "Store result request body data",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "task_id": {
                        "title": "TaskId",
                        "description": "Id of the task result corresponds to",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "user_id": {
                        "title": "UserId",
                        "description": "Id of the user result corresponds to",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "exercise_group_id": {
                        "title": "Course or module id",
                        "description": "Course or module id",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "assessment": {
                        "title": "Assessment mark",
                        "description": "Assessment mark",
                        "type": "number",
                        "format": "float",
                        "example": "10"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ],
    "security": [
        []
    ]
}